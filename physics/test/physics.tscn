[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]

script/source = "extends Node

const world = preload(\"res://physics/world.gd\")
const STEP_PER_SEC = 10

var frame = 0
var elapsed = 0

var width = ProjectSettings.get(\"display/window/size/width\")
var height = ProjectSettings.get(\"display/window/size/height\")

var params = {
	\"scale\": scalar.Div(scalar.One, scalar.FromInt(10)),
	\"dt\": scalar.Div(scalar.One, scalar.FromInt(STEP_PER_SEC)),
	\"gravity_y\": scalar.FromInt(100),
}
var w = world.new(params)

func _ready():
	set_process_input(true)
	set_physics_process(true)
	set_process(true)
	var b = w.AddBox(
		scalar.FromInt(0),
		w.FromPixel(400),
		w.FromPixel(20),
		w.FromPixel(500),
		w.FromPixel(1500)
	)
	var n = preload(\"res://test/box.tscn\").instance()
	b.node = n
	n.width = 400
	n.height = 20
	n.position = Vector2(500, 1500)
	n.color = Color(0, 0, 1)
	add_child(n)
	var c = w.AddCircle(
		scalar.FromInt(10),
		w.FromPixel(30),
		w.FromPixel(500),
		w.FromPixel(100)
	)
	var nc = preload(\"res://test/circle.tscn\").instance()
	c.node = nc
	nc.radius = 30
	nc.position = Vector2(500, 100)
	add_child(nc)

func _input(event):
	if event is InputEventMouseButton and not event.pressed:
		var x = int(event.position.x)
		var y = int(event.position.y)
		if event.button_index == BUTTON_LEFT:
			var b = w.AddCircle(
				scalar.FromInt(10),
				w.FromPixel(30),
				w.FromPixel(x),
				w.FromPixel(y)
			)
			var n = preload(\"res://test/circle.tscn\").instance()
			b.node = n
			n.radius = 30
			n.position = event.position
			add_child(n)
		if event.button_index == BUTTON_RIGHT:
			var b = w.AddBox(
				scalar.FromInt(10),
				w.FromPixel(30),
				w.FromPixel(30),
				w.FromPixel(x),
				w.FromPixel(y)
			)
			var n = preload(\"res://test/box.tscn\").instance()
			b.node = n
			n.width = 30
			n.height = 30
			n.position = event.position
			add_child(n)

func _process(delta):
	elapsed += delta
	var t = elapsed * STEP_PER_SEC
	for b in w.bodies:
		var prev = Vector2(
			w.ToPixel(b.prev_pos_x),
			w.ToPixel(b.prev_pos_y)
		)
		var curr = Vector2(
			w.ToPixel(b.pos_x),
			w.ToPixel(b.pos_y)
		)
		b.node.position = prev.linear_interpolate(curr, t)

func _physics_process(delta):
	if frame % (Engine.iterations_per_second / STEP_PER_SEC) == 0:
		w.Step()
		for b in w.bodies:
			var xl = w.FromPixel(width)
			var yl = w.FromPixel(height)
			if b.pos_x < 0 or b.pos_x > xl or b.pos_y < 0 or b.pos_y > yl:
				w.RemoveBody(b)
				b.node.queue_free()
		elapsed = 0
	frame += 1
"

[node name="Node" type="Node" index="0"]

script = SubResource( 1 )


