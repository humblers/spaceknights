buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.blindpirate:gogradle:0.7.0"
    }
}


allprojects {
    it.apply plugin: 'com.github.blindpirate.gogradle'
    it.dependencies {
        golang {
        }
    }
}

golang {
    packagePath = 'servers'
    goVersion = '1.8.1'
}

task copyExecutable(type: Copy) {
    ['game', 'lobby'].each { key ->
        from ("${key}/.gogradle") {
            include "*${key}"
        }
    }
    into 'bin'
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        rename('(.*)_(.*)_(.*)', '$1_$3.exe')
    }
}

task runWindows() {
    doLast {
        String os = System.properties['os.name'].toLowerCase()
        if (os.contains('windows')) {
            ['game', 'lobby'].each { key -> 
                ProcessBuilder pb = new ProcessBuilder().directory(getProject().getProjectDir().toPath().resolve('bin').toFile())
                pb.command('cmd.exe', '/c', 'start', "windows_${key}.exe")
                pb.start()
            }
        }
    }
}

build.dependsOn copyExecutable
runWindows.dependsOn copyExecutable

copyExecutable.dependsOn ':game:build'
copyExecutable.dependsOn ':lobby:build'
