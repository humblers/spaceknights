[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]

code = "shader_type canvas_item;

uniform bool damaged = false;
uniform bool frozen = false;

void fragment(){
	vec4 col = texture(TEXTURE, UV);
	COLOR = col;

	if (frozen) {
	    if (sin(TIME * 10.0) > 0.0) {
	        COLOR = COLOR * 3.0;
	    } else {
	        COLOR = COLOR * 2.7;
	    }
	}

	if (damaged) {
	    COLOR.r = texture(TEXTURE, UV).r + 0.3;
	}
}"

[resource]

render_priority = 0
shader = SubResource( 1 )
shader_param/damaged = false
shader_param/frozen = false
_sections_unfolded = [ "shader_param" ]

