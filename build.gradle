import java.nio.file.Files
import java.nio.file.Path
import java.nio.file.Paths

def targetDirs = ['server', 'server/lobby']

task link() {
    for (String path : ['gradle', 'gradlew', 'gradlew.bat']) {
        Path org = getProject().getProjectDir().toPath().resolve(path)
        for (String targetDir : targetDirs) {
            Path target = getProject().getProjectDir().toPath().resolve(targetDir).resolve(path)
            println('create symlink ' + org + ' -> ' + target)
            Files.deleteIfExists(target)
            Files.createSymbolicLink(target, org)
       }
    }
}

task buildServer(dependsOn: 'link') {
    String gradle_command = './gradlew'
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        gradle_command = 'gradle.bat'
    }
    for (String targetDir : targetDirs) {
        ProcessBuilder pb = new ProcessBuilder().command(gradle_command, 'build').directory(getProject().getProjectDir().toPath().resolve(targetDir).toFile())
        BufferedReader reader = 
                        new BufferedReader(new InputStreamReader(pb.start().getInputStream()));
        StringBuilder builder = new StringBuilder();
        String line = null
        while ( (line = reader.readLine()) != null) {
           builder.append(line)
           builder.append(System.getProperty("line.separator"))
        }
        println(builder.toString())
    }
}
